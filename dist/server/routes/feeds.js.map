{"version":3,"sources":["../../../src/server/routes/feeds.js"],"names":["router","Router","get","req","res","status","json","name","user","userDb","error","result","message","post","body","url","category","promise","Promise","resolve","reject","then","data","_id","toDelete","cb","send","newBookmark","console","log","newFeed"],"mappings":"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","file":"feeds.js","sourcesContent":["import express from 'express'\n// import { ObjectId } from 'mongodb'\n\nimport { ensureAuthenticated } from '../auth/passport.js'\nimport {\n  getFeeds, addFeed, addCategory,\n  deleteCategory, refreshArticles, bookmark\n} from '../models/db.js'\n\nconst router = express.Router()\n\nrouter.get('/protected', ensureAuthenticated, (req, res) => {\n  res.status(200).json({ name: res.req.user.name })\n})\n\n// Start called by Router.jsx\n//\nrouter.get('/feeds', (req, res) => {\n  // let userDb = req.session.passport.user\n  let userDb = 'user1'\n  getFeeds(userDb, function (error, result) {\n    if (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n      throw error\n    }\n    res.json(result)\n  })\n})\n\nrouter.post('/articles', (req, res) => {\n  const { name, url, category, } = req.body\n  // let userDb = req.session.passport.user\n  let userDb = 'user1'\n\n  let promise = new Promise(function (resolve, reject) {\n    refreshArticles(userDb, category, name, url, function (error, result) {\n      if (error) reject(error)\n      resolve(result)\n    })\n  })\n  promise.then(function (data) {\n    getFeeds(userDb, function (error, result) {\n      if (error) {\n        res.status(500).json({ message: `Internal Server Error: ${error}` })\n        throw error\n      }\n      res.status(200).json(result)\n    })\n  })\n  res.status(200).json({ status: 'refreshed articles' })\n})\n// End called by Router.jsx\n//\n\n// Started called by EditCategories.jsx\n//\nrouter.post('/editcategories', (req, res) => {\n  const { _id, name, toDelete } = req.body\n  const userDb = 'user1'\n\n  function cb (result) {\n    res.status(200).send('1 record inserted')\n  }\n  if (name) {\n    addCategory(userDb, name, _id, function (error, result) {\n      if (error) {\n        res.status(500).json({ message: `Internal Server Error: ${error}` })\n      }\n      cb(result)\n    })\n  }\n  if (toDelete) {\n    deleteCategory('rssapp', toDelete, _id, function (error, result) {\n      if (error) {\n        res.status(500).json({ message: `Internal Server Error: ${error}` })\n      }\n      cb(result)\n    })\n  }\n})\n// Started called by EditCategories.jsx\n//\n\n// Started called by Articles.jsx\n//\nrouter.post('/bookmark', (req, res) => {\n  const newBookmark = req.body\n  let userDb = 'user1'\n\n  bookmark(userDb, newBookmark, function (error, result) {\n    if (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n    console.log(result)\n    res.status(200).json(result)\n  })\n})\n// End called by Articles.jsx\n//\n\n// Start called by NewFeed.jsx\n//\nrouter.post('/feeds', (req, res) => {\n  // let userDb = req.session.passport.user\n  const userDb = 'user1'\n  const newFeed = req.body\n\n  res.status(200).send('1 record inserted')\n    /*\n  const errors = validateFeed(newFeed)\n  if (errors) {\n    res.status(400).json(errors)\n    return\n  }\n  */\n\n  // addFeed('rssapp', newFeed, function (error, result) {\n  addFeed(userDb, newFeed, function (error, result) {\n    if (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n    res.status(200).send('1 record inserted')\n  })\n})\n// End called by NewFeed.jsx\n//\n\n  /*\nrouter.delete('/bookmarks/:id', ensureAuthenticated, (req, res) => {\n  let userDb = req.session.passport.user\n  let bookmarkId\n  try {\n    bookmarkId = new ObjectId(req.params.id)\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` })\n    return\n  }\n\n  deleteSite('bookmarks.' + userDb, bookmarkId, function (error, result) {\n    if (error) {\n      if (error === '404') {\n        res.status(404).json({ message: 'Delete object not found' })\n        return\n      }\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n      return\n    } res.status(200).json({ message: 'Successfully deleted object' })\n  })\n})\n\nrouter.patch('/bookmarks', ensureAuthenticated, (req, res) => {\n  let userDb = req.session.passport.user\n  const site = req.body\n  site.updated = new Date().getTime()\n\n  const errors = validateEdit(site)\n  if (errors) {\n    res.status(422).json(errors)\n    return\n  }\n\n  editSite('bookmarks.' + userDb, site, function (error, result) {\n    if (error) throw error\n    res.status(200).json('Edit site success')\n  })\n})\n*/\n\nexport { router }\n"]}