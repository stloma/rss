{"version":3,"sources":["../../../src/server/routes/feeds.js"],"names":["feeds","Router","get","req","res","userDb","result","json","error","status","message","post","body","name","url","category","_id","toDelete","newBookmark","feed","title","link","newFeed","send"],"mappings":"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","file":"feeds.js","sourcesContent":["import express from 'express'\n\nimport {\n  getFeeds, addFeed, addCategory,\n  deleteCategory, refreshArticles, createBookmark,\n  markRead\n} from '../models/db'\n\nconst feeds = express.Router()\n\n// Start called by Router.jsx\n//\nfeeds.get('/feeds', async (req, res) => {\n  // let userDb = req.session.passport.user\n  const userDb = 'user1'\n\n  try {\n    const result = await getFeeds(userDb)\n    res.json(result)\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n\nfeeds.post('/articles', async (req, res) => {\n  const { name, url, category } = req.body\n  // let userDb = req.session.passport.user\n  const userDb = 'user1'\n\n  try {\n    await refreshArticles(userDb, category, name, url)\n    res.status(200).json({ status: 'refresh success' })\n  } catch (error) { res.status(500).json({ status: `${url} refresh failure: ${error}` }) }\n})\n// End called by Router.jsx\n//\n//\n\n// Started called by EditCategories.jsx\n//\nfeeds.post('/editcategories', async (req, res) => {\n  const { _id, name, toDelete } = req.body\n  const userDb = 'user1'\n\n  if (name) {\n    try {\n      await addCategory(userDb, name, _id)\n    } catch (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n  }\n  if (toDelete) {\n    try {\n      await deleteCategory(userDb, toDelete, _id)\n    } catch (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n  }\n  res.status(200).json({ message: 'Success' })\n})\n// Started called by EditCategories.jsx\n//\n\n// Started called by Articles.jsx\n//\nfeeds.post('/bookmark', async (req, res) => {\n  const newBookmark = req.body\n  const userDb = 'user1'\n\n  try {\n    const result = await createBookmark(userDb, newBookmark)\n    res.status(200).json(result)\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n\nfeeds.post('/read', async (req, res) => {\n  // let userDb = req.session.passport.user\n  const userDb = 'user1'\n  const { category, feed, title, link } = req.body\n\n  try {\n    const result = await markRead(category, feed, title, link, userDb)\n    res.json(result)\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n// End called by Articles.jsx\n//\n\n// Start called by NewFeed.jsx\n//\nfeeds.post('/feeds', async (req, res) => {\n  // let userDb = req.session.passport.user\n  const userDb = 'user1'\n  const newFeed = req.body\n\n  // addFeed('rssapp', newFeed, function (error, result) {\n  try {\n    await addFeed(userDb, newFeed)\n    res.status(200).send('1 record inserted')\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n\nexport default feeds\n"]}