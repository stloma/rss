{"version":3,"sources":["../../../src/server/routes/feeds.js"],"names":["feeds","Router","get","req","res","userDb","String","session","passport","user","result","json","error","status","message","post","body","name","url","category","_id","toDelete","newBookmark","feed","title","link","newFeed","response","send","delete"],"mappings":"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","file":"feeds.js","sourcesContent":["import express from 'express'\n\nimport {\n  getFeeds, addFeed, addCategory,\n  deleteCategory, refreshArticles, createBookmark,\n  markRead, deleteFeed\n} from '../models/feeds'\n\nconst feeds = express.Router()\n\n// Start called by Router.jsx\n//\nfeeds.get('/feeds', async (req, res) => {\n  const userDb = String(req.session.passport.user)\n\n  try {\n    const result = await getFeeds(userDb)\n    res.json(result)\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n\nfeeds.post('/articles', async (req, res) => {\n  const { name, url, category } = req.body\n  const userDb = String(req.session.passport.user)\n\n  try {\n    await refreshArticles(userDb, category, name, url)\n    res.status(200).json({ status: 'refresh success' })\n  } catch (error) { res.status(500).json({ status: `${url} refresh failure: ${error}` }) }\n})\n// End called by Router.jsx\n//\n//\n\n// Started called by EditCategories.jsx\n//\nfeeds.post('/editcategories', async (req, res) => {\n  const { _id, name, toDelete } = req.body\n  const userDb = String(req.session.passport.user)\n\n  if (name) {\n    try {\n      await addCategory(userDb, name, _id)\n    } catch (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n  }\n  if (toDelete) {\n    try {\n      await deleteCategory(userDb, toDelete, _id)\n    } catch (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n  }\n  res.status(200).json({ message: 'Success' })\n})\n// Started called by EditCategories.jsx\n//\n\n// Started called by Articles.jsx\n//\nfeeds.post('/bookmark', async (req, res) => {\n  const newBookmark = req.body\n  const userDb = String(req.session.passport.user)\n\n  try {\n    const result = await createBookmark(userDb, newBookmark)\n    res.status(200).json(result)\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n\nfeeds.post('/read', async (req, res) => {\n  // let userDb = req.session.passport.user\n  const { category, feed, title, link } = req.body\n  const userDb = String(req.session.passport.user)\n\n  try {\n    const result = await markRead(category, feed, title, link, userDb)\n    res.json(result)\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n// End called by Articles.jsx\n//\n\n// Start called by NewFeed.jsx\n//\nfeeds.post('/feeds', async (req, res) => {\n  // let userDb = req.session.passport.user\n  const userDb = String(req.session.passport.user)\n  const newFeed = req.body\n\n  // addFeed('rssapp', newFeed, function (error, result) {\n  try {\n    const response = await addFeed(userDb, newFeed)\n    if (response === 'success') {\n      res.status(200).send('1 record inserted')\n    } else {\n      res.status(400).json({ error: response })\n    }\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }) }\n})\n\nfeeds.delete('/feeds', async (req, res) => {\n  const userDb = String(req.session.passport.user)\n  const { category, feed } = req.body\n  const response = await deleteFeed(userDb, category, feed)\n  res.status(200).json({ message: 'success' })\n})\n\nexport default feeds\n"]}