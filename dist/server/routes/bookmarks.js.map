{"version":3,"sources":["../../../src/server/routes/bookmarks.js"],"names":["router","Router","get","req","res","status","json","name","user","userDb","session","passport","error","result","message","post","newSite","body","created","Date","getTime","errors","send","delete","bookmarkId","params","id","patch","site","updated"],"mappings":"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","file":"bookmarks.js","sourcesContent":["import express from 'express'\nimport { ObjectId } from 'mongodb'\n\nimport { ensureAuthenticated } from '../auth/passport.js'\nimport { addSite, getBookmarks, deleteSite, editSite } from '../models/db.js'\nimport { validateSite, validateEdit } from '../models/bookmark.js'\n\nconst router = express.Router()\n\nrouter.get('/protected', ensureAuthenticated, (req, res) => {\n  res.status(200).json({ name: res.req.user.name })\n})\n\nrouter.get('/bookmarks', ensureAuthenticated, (req, res) => {\n  let userDb = req.session.passport.user\n\n  getBookmarks(userDb, function (error, result) {\n    if (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n      throw error\n    }\n    res.json(result)\n  })\n})\n\nrouter.post('/bookmarks', ensureAuthenticated, (req, res) => {\n  let userDb = req.session.passport.user\n  const newSite = req.body\n  newSite.created = new Date().getTime()\n  const errors = validateSite(newSite)\n  if (errors) {\n    res.status(400).json(errors)\n    return\n  }\n\n  addSite('bookmarks.' + userDb, newSite, function (error, result) {\n    if (error) {\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    }\n    res.status(200).send('1 record inserted')\n  })\n})\n\nrouter.delete('/bookmarks/:id', ensureAuthenticated, (req, res) => {\n  let userDb = req.session.passport.user\n  let bookmarkId\n  try {\n    bookmarkId = new ObjectId(req.params.id)\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` })\n    return\n  }\n\n  deleteSite('bookmarks.' + userDb, bookmarkId, function (error, result) {\n    if (error) {\n      if (error === '404') {\n        res.status(404).json({ message: 'Delete object not found' })\n        return\n      }\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n      return\n    } res.status(200).json({ message: 'Successfully deleted object' })\n  })\n})\n\nrouter.patch('/bookmarks', ensureAuthenticated, (req, res) => {\n  let userDb = req.session.passport.user\n  const site = req.body\n  site.updated = new Date().getTime()\n\n  const errors = validateEdit(site)\n  if (errors) {\n    res.status(422).json(errors)\n    return\n  }\n\n  editSite('bookmarks.' + userDb, site, function (error, result) {\n    if (error) throw error\n    res.status(200).json('Edit site success')\n  })\n})\n\nexport { router }\n"]}