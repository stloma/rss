{"version":3,"sources":["../../src/server/server.js"],"names":["install","app","LocalStrategy","require","Strategy","use","static","urlencoded","extended","json","config","secret","cookie","maxAge","store","saveUninitialized","resave","initialize","session","serializeUser","loginUser","done","_id","deserializeUser","username","password","userExists","rssDb","collection","findOne","isMatch","error","listen","console","log","get","req","res","sendFile","resolve"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;AACA;;;;AAEA,2BAAiBA,OAAjB;;AAEA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAAhD;;AAEAH,IAAII,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,MAAf,CAAR;AACAL,IAAII,GAAJ,CAAQ,6BAAR;AACAJ,IAAII,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQ,qBAAWI,IAAX,EAAR;;AAEA,IAAMC,SAASP,QAAQ,mBAAR,CAAf;;AAEAF,IAAII,GAAJ,CAAQ,8BAAQ;AACdM,UAAQD,OAAOC,MADD;AAEdC,UAAQ;AACNC,YAAQ,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,CADxB,CAC0B;AAD1B,GAFM;AAKdC,kBALc;AAMdC,qBAAmB,IANL;AAOdC,UAAQ;AAPM,CAAR,CAAR;;AAUAf,IAAII,GAAJ,CAAQ,mBAASY,UAAT,EAAR;AACAhB,IAAII,GAAJ,CAAQ,mBAASa,OAAT,EAAR;;AAEA,mBAASC,aAAT,CAAuB,UAACC,SAAD,EAAYC,IAAZ,EAAqB;AAC1CA,OAAK,IAAL,EAAWD,UAAUE,GAArB;AACD,CAFD;;AAIA,mBAASC,eAAT,CAAyB,gBAAOH,SAAP,EAAkBC,IAAlB,EAA2B;AAClDA,OAAK,IAAL,EAAWD,SAAX;AACD,CAFD;;AAIA,mBAASf,GAAT,CAAa,IAAIH,aAAJ,CACV,gBAAOsB,QAAP,EAAiBC,QAAjB,EAA2BJ,IAA3B,EAAoC;AACnC,MAAI;AACF,QAAMK,aAAa,MAAM,OAAGC,KAAH,CAASC,UAAT,CAAoB,OAApB,EAA6BC,OAA7B,CAAqC,EAAEL,kBAAF,EAArC,CAAzB;AACA,QAAI,CAACE,UAAL,EAAiB;AACf,aAAOL,KAAK,IAAL,EAAW,KAAX,CAAP;AACD;AACD,QAAMS,UAAU,MAAM,4BAAgBL,QAAhB,EAA0BC,WAAWD,QAArC,CAAtB;AACA,QAAI,CAACK,OAAL,EAAc;AACZ,aAAOT,KAAK,IAAL,EAAW,KAAX,CAAP;AACD;AACD,WAAOA,KAAK,IAAL,EAAWK,UAAX,CAAP;AACD,GAVD,CAUE,OAAOK,KAAP,EAAc;AACd,WAAOV,KAAKU,KAAL,CAAP;AACD;AACF,CAfU,CAAb;;AAkBA9B,IAAII,GAAJ,CAAQ,MAAR;AACAJ,IAAII,GAAJ,CAAQ,MAAR;;AAEAJ,IAAI+B,MAAJ,CAAW,IAAX,EAAiB,WAAjB,EAA8B,YAAM;AAClCC,UAAQC,GAAR,CAAY,0BAAZ;AACD,CAFD;;AAIAjC,IAAIkC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAa,iBAAb,CAAb;AACD,CAFD","file":"server.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport SourceMapSupport from 'source-map-support'\nimport path from 'path'\nimport session from 'express-session'\nimport passport from 'passport'\nimport cookieParser from 'cookie-parser'\n\nimport feeds from './routes/feeds'\nimport user from './routes/user'\nimport { ComparePassword } from './models/user'\nimport { db, store } from './models/db'\n\nSourceMapSupport.install()\n\nconst app = express()\nconst LocalStrategy = require('passport-local').Strategy\n\napp.use(express.static('dist'))\napp.use(cookieParser())\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(bodyParser.json())\n\nconst config = require('./.session-secret')\n\napp.use(session({\n  secret: config.secret,\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 24 * 7 // 1 week\n  },\n  store,\n  saveUninitialized: true,\n  resave: true\n}))\n\napp.use(passport.initialize())\napp.use(passport.session())\n\npassport.serializeUser((loginUser, done) => {\n  done(null, loginUser._id)\n})\n\npassport.deserializeUser(async (loginUser, done) => {\n  done(null, loginUser)\n})\n\npassport.use(new LocalStrategy(\n  (async (username, password, done) => {\n    try {\n      const userExists = await db.rssDb.collection('users').findOne({ username })\n      if (!userExists) {\n        return done(null, false)\n      }\n      const isMatch = await ComparePassword(password, userExists.password)\n      if (!isMatch) {\n        return done(null, false)\n      }\n      return done(null, userExists)\n    } catch (error) {\n      return done(error)\n    }\n  })\n))\n\napp.use('/api', feeds)\napp.use('/api', user)\n\napp.listen(3002, '127.0.0.1', () => {\n  console.log('App started on port 3002')\n})\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('dist/index.html'))\n})\n"]}