{"version":3,"sources":["../../../src/server/scripts/get.js"],"names":["FeedParser","require","request","fetchFeeds","url","Promise","resolve","reject","feedparser","method","e","res","body","statusCode","Error","end","on","error","articles","article","read","push"],"mappings":";;;;;AAAA,IAAMA,aAAaC,QAAQ,YAAR,CAAnB;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;;AAEA,SAASE,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,aAAa,IAAIR,UAAJ,EAAnB;;AAEAE,YAAQ,EAAEO,QAAQ,KAAV,EAAiBL,QAAjB,EAAR,EAAgC,UAACM,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAkB;AAChD,UAAIF,CAAJ,EAAO;AACL,eAAOH,OAAOG,CAAP,CAAP;AACD;AACD,UAAIC,IAAIE,UAAJ,KAAmB,GAAvB,EAA4B;AAC1B,eAAON,OAAO,IAAIO,KAAJ,+BAAsCH,IAAIE,UAA1C,eAA8DT,GAA9D,OAAP,CAAP;AACD;AACDI,iBAAWO,GAAX,CAAeH,IAAf;AACD,KARD;;AAUAJ,eAAWQ,EAAX,CAAc,OAAd,EAAuB,UAACC,KAAD,EAAW;AAChCV,aAAOU,KAAP;AACD,KAFD;;AAIA,QAAMC,WAAW,EAAjB;AACAV,eAAWQ,EAAX,CAAc,UAAd,EAA0B,YAAM;AAC9B,UAAIG,UAAUX,WAAWY,IAAX,EAAd;;AAEA,aAAOD,OAAP,EAAgB;AACdD,iBAASG,IAAT,CAAcF,OAAd;AACAA,kBAAUX,WAAWY,IAAX,EAAV;AACD;AACF,KAPD,EAOGJ,EAPH,CAOM,KAPN,EAOa,YAAM;AACjBV,cAAQY,QAAR;AACD,KATD;AAUD,GA5BM,CAAP;AA6BD;;kBAEcf,U","file":"get.js","sourcesContent":["const FeedParser = require('feedparser')\nconst request = require('request')\n\nfunction fetchFeeds(url) {\n  return new Promise((resolve, reject) => {\n    const feedparser = new FeedParser()\n\n    request({ method: 'GET', url }, (e, res, body) => {\n      if (e) {\n        return reject(e)\n      }\n      if (res.statusCode !== 200) {\n        return reject(new Error(`Bad status code (status: ${res.statusCode}, url: ${url})`))\n      }\n      feedparser.end(body)\n    })\n\n    feedparser.on('error', (error) => {\n      reject(error)\n    })\n\n    const articles = []\n    feedparser.on('readable', () => {\n      let article = feedparser.read()\n\n      while (article) {\n        articles.push(article)\n        article = feedparser.read()\n      }\n    }).on('end', () => {\n      resolve(articles)\n    })\n  })\n}\n\nexport default fetchFeeds\n"]}